[tool.poetry]
name = "mes-opcua-server"
version = "0.1.0"
description = ""
authors = ["Jicheng Zhi <jzhi0004@student.monash.edu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
redis = "^5.0.1"
pydantic = "^2.6.1"
pydantic-settings = "^2.1.0"
flatdict = "^4.0.1"
opcuax = { git = "https://github.com/monash-automation/opcuax.git" }

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pre-commit = "^3.6.0"
ruff = "^0.2.0"
mypy = "^1.8.0"

[tool.mypy]
strict = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "asyncua.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "flatdict"
ignore_missing_imports = true

[tool.ruff]
src = ["opcuax", "tests", "examples"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.lint.isort]
known-third-party = ["pydantic", "asyncua"]

[tool.poetry.scripts]
server = "mes_opcua_server.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
